import 'package:auto_route/auto_route.dart';
import 'package:flutter/material.dart';
import 'package:flutter/rendering.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:responsive_framework/responsive_framework.dart';

import '../common/utils/utils.dart';
import '../component/di/dependencies.dart';
import '../component/router/app_router.dart';
import '../component/theme/responsive.dart';
import '../config/constants.dart';
import '../feature/auth/cubit/auth_cubit.dart';
import '../feature/settings/cubit/settings_cubit.dart';

@RoutePage(name: DashboardPage.routeName)
class DashboardPage extends StatefulWidget {
  const DashboardPage({super.key});

  static const String routeName = 'DashboardRoute';

  @override
  State<DashboardPage> createState() => _DashboardPageState();
}

class _DashboardPageState extends State<DashboardPage> {
  double themeHeight = fNavBarHeight;
  ValueNotifier<double> barHeight = ValueNotifier(fNavBarHeight);
  late bool visibleOnScroll;

  @override
  void initState() {
    super.initState();

    visibleOnScroll = context
        .read<SettingsCubit>()
        .state
        .miscConfig
        .navigationOnScrollVisible;
  }

  @override
  Widget build(BuildContext context) {
    return MultiBlocListener(
      listeners: [
        /// –°–ª—É—à–∞–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –Ω–∏–∂–Ω–µ–π –ø–∞–Ω–µ–ª–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        BlocListener<SettingsCubit, SettingsState>(
            listenWhen: (previous, current) =>
                previous.miscConfig.navigationOnScrollVisible !=
                current.miscConfig.navigationOnScrollVisible,
            listener: (context, state) {
              visibleOnScroll = state.miscConfig.navigationOnScrollVisible;
              if (visibleOnScroll) {
                barHeight.value = fNavBarHeight;
              }
            }),

        /// –í—ã–≤–æ–¥–∏–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ, –µ—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏
        /// –¥–∞–Ω–Ω—ã—Ö –æ –≤–æ—à–µ–¥—à–µ–º —é–∑–µ—Ä–µ. –û—à–∏–±–∫–∞ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç, –µ—Å–ª–∏ –ø—Ä–∏ –ª–æ–≥–∏–Ω–µ
        /// –ø—Ä–∏—à–µ–ª –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π connectSSID –∏ [AuthCubit.fetchMe()]
        /// –≤–µ—Ä–Ω—É–ª null
        BlocListener<AuthCubit, AuthState>(
          listenWhen: (p, c) => p.isAuthorized && c.isAnomaly,
          listener: (context, state) {
            getIt.get<Utils>().showAlert(
                  context: context,
                  title: const Text('–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏'),
                  content: const Text(
                    '–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–ª—É—á–µ–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º\n\n'
                    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–π—Ç–∏ –∏ –≤–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç, –∏–ª–∏ –∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ '
                    '—ç—Ç–æ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ –æ–∫–Ω–æ\n\n'
                    '–ú–æ–∂–µ—Ç —Å–∞–º–æ –ø—Ä–æ–π–¥–µ—Ç? ü§î',
                  ),
                  actionsBuilder: (context) => [
                    TextButton(
                      child: const Text('–í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞'),
                      onPressed: () {
                        context.read<AuthCubit>().logOut();
                        Navigator.of(context).pop();
                      },
                    ),
                  ],
                );
          },
        ),
      ],
      child: NotificationListener<UserScrollNotification>(
        onNotification: (notification) {
          if (visibleOnScroll) {
            return false;
          }

          /// –°–ª—É—à–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫—Ä–æ–ª–ª–µ, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å –Ω–∏–∂–Ω—é—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é,
          /// –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–∫—Ä–æ–ª–ª–∏—Ç –≤–Ω–∏–∑
          final direction = notification.direction;
          final axis = notification.metrics.axisDirection;

          if (axis == AxisDirection.right || axis == AxisDirection.left) {
            return false;
          }

          double? newHeight = barHeight.value;
          if (direction == ScrollDirection.forward) {
            newHeight = themeHeight;
          } else if (direction == ScrollDirection.reverse) {
            newHeight = 0;
          }
          barHeight.value = newHeight;

          return false;
        },
        child: AutoTabsRouter(
          lazyLoad: false,
          routes: const [
            MyArticlesRoute(),
            MyNewsRoute(),
            MyServicesRoute(),
            SettingsRoute(),
          ],
          builder: (context, child) {
            final tabsRouter = context.tabsRouter;

            return Scaffold(
              body: SafeArea(
                child: Center(
                  child: MaxWidthBox(
                    maxWidth: 1200,
                    child: Row(
                      children: [
                        ResponsiveVisibility(
                          visible: false,
                          visibleConditions: [
                            Condition.largerThan(
                              name: ScreenType.mobile,
                              value: true,
                            )
                          ],
                          child: _Drawer(router: tabsRouter),
                        ),
                        Expanded(
                          child: Padding(
                            padding: const EdgeInsets.symmetric(
                              horizontal: 6.0,
                            ),
                            child: child,
                          ),
                        ),
                      ],
                    ),
                  ),
                ),
              ),
              bottomNavigationBar: ResponsiveVisibility(
                hiddenConditions: [
                  Condition.largerThan(name: ScreenType.mobile, value: false)
                ],
                child: AnimatedBuilder(
                  animation: barHeight,
                  builder: (context, child) {
                    return AnimatedContainer(
                      duration: const Duration(milliseconds: 200),
                      height: barHeight.value,
                      child: child,
                    );
                  },
                  child: _BottomNavigation(router: tabsRouter),
                ),
              ),
            );
          },
        ),
      ),
    );
  }
}

class _Drawer extends StatelessWidget {
  const _Drawer({required this.router});

  final TabsRouter router;

  @override
  Widget build(BuildContext context) {
    const padding = EdgeInsets.symmetric(vertical: 10);

    return NavigationRail(
      elevation: 5,
      labelType: NavigationRailLabelType.all,
      selectedIndex: router.activeIndex,
      onDestinationSelected: (i) {
        /// –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —Ç–∞–±, –≤ –∫–æ—Ç–æ—Ä–æ–º
        /// –º—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è - –≤—ã—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å
        if (router.activeIndex == i) {
          var rootOfIndex = router.stackRouterOfIndex(i);
          rootOfIndex?.popUntilRoot();
        } else {
          router.setActiveIndex(i);
        }
      },
      destinations: const [
        NavigationRailDestination(
          icon: Icon(Icons.article_outlined),
          label: Text('–°—Ç–∞—Ç—å–∏'),
          padding: padding,
        ),
        NavigationRailDestination(
          icon: Icon(Icons.newspaper_outlined),
          label: Text('–ù–æ–≤–æ—Å—Ç–∏'),
          padding: padding,
        ),
        NavigationRailDestination(
          icon: Icon(Icons.widgets_outlined),
          label: Text('–°–µ—Ä–≤–∏—Å—ã'),
          padding: padding,
        ),
        NavigationRailDestination(
          icon: Icon(Icons.settings_outlined),
          label: Text('–ù–∞—Å—Ç—Ä–æ–π–∫–∏'),
          padding: padding,
        ),
      ],
    );
  }
}

class _BottomNavigation extends StatelessWidget {
  const _BottomNavigation({required this.router});

  final TabsRouter router;

  @override
  Widget build(BuildContext context) {
    return NavigationBar(
      labelBehavior: NavigationDestinationLabelBehavior.alwaysShow,
      selectedIndex: router.activeIndex,
      onDestinationSelected: (i) {
        /// –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ —Ç–∞–±, –≤ –∫–æ—Ç–æ—Ä–æ–º
        /// –º—ã —É–∂–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è - –≤—ã—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å
        if (router.activeIndex == i) {
          var rootOfIndex = router.stackRouterOfIndex(i);
          rootOfIndex?.popUntilRoot();
        } else {
          router.setActiveIndex(i);
        }
      },
      destinations: const [
        NavigationDestination(
          label: '–°—Ç–∞—Ç—å–∏',
          icon: Icon(Icons.article_outlined),
        ),
        NavigationDestination(
          label: '–ù–æ–≤–æ—Å—Ç–∏',
          icon: Icon(Icons.newspaper_outlined),
        ),
        NavigationDestination(
          label: '–°–µ—Ä–≤–∏—Å—ã',
          icon: Icon(Icons.widgets_outlined),
        ),
        NavigationDestination(
          label: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
          icon: Icon(Icons.settings_outlined),
        ),
      ],
    );
  }
}
